name: Update GitHub Project from Excel

on:
  workflow_dispatch:
    inputs:
      excel_file_path:
        description: 'Path to Excel file'
        required: true
        default: 'GitHubExport2.xlsx'

jobs:
  update_project:
    runs-on: windows-latest
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'  # または、プロジェクトで使用している.NETのバージョン

    - name: Download Excel file
      run: |
        $excelUrl = "https://pcajp-my.sharepoint.com/:x:/r/personal/nakagawa_pca_co_jp/Documents/GitHubExport.xlsx?d=we274b615ed994e13afde3c411c7caef3&csf=1&web=1&e=mYPZT8"
        $excelFilePath = "$env:TEMP\GitHubExport.xlsx"  # 一時フォルダーに保存するパス
        

        if (Test-Path $excelFilePath) {
          Write-Host "ファイルは存在します: $excelFilePath"
        } else {
        Write-Host "ファイルが存在しません: $excelFilePath"
        }

        # Invoke-WebRequest -Uri $excelUrl -OutFile $excelFilePath
        try {
            Invoke-WebRequest -Uri $excelUrl -OutFile $excelFilePath
            if (-not (Test-Path $excelFilePath)) {
                throw "ファイルのダウンロードに失敗しました。"
            }
            Write-Host "ファイルが正常にダウンロードされました: $excelFilePath"
        } catch {
            Write-Error "エラーが発生しました: $_"
            exit 1  # エラーが発生した場合は、ワークフローを失敗させる
        }

    - name: Run executable
      run: |
        # $githubToken = "${{ secrets.GITHUB_TOKEN }}"
        $githubToken = "${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}"
        # $excelFilePath = "${{ github.workspace }}/${{ github.event.inputs.excel_file_path }}"
        $excelFilePath = "$env:TEMP\GitHubExport.xlsx"  # ダウンロードしたファイルのパス
        $projectName = 'KanbanTest'
        $owner = "${{ github.repository_owner }}"
        $repo = "${{ github.event.repository.name }}"

        $exePath = "${{ github.workspace }}\GitHubExport\GitHubExport\bin\Release\net8.0\GitHubExport.exe"
        
        # & $exePath $githubToken $excelFilePath $projectName $owner $repo
        try {
          & $exePath $githubToken $excelFilePath $projectName $owner $repo
          Write-Host "実行が成功しました。"
        } catch {
          Write-Error "実行中にエラーが発生しました: $_"
          exit 1  # 実行が失敗した場合は、ワークフローを失敗させる
        }
      shell: pwsh
